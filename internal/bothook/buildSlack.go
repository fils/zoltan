package bothook

import (
	"encoding/json"
	"fmt"
)

// sparql struct

type SPARQLresp struct {
	Head    Head    `json:"head"`
	Results Results `json:"results"`
}
type Head struct {
	Vars []string `json:"vars"`
}
type Subj struct {
	Type  string `json:"type"`
	Value string `json:"value"`
}
type Score struct {
	Datatype string `json:"datatype"`
	Type     string `json:"type"`
	Value    string `json:"value"`
}
type Name struct {
	Type  string `json:"type"`
	Value string `json:"value"`
}
type Desc struct {
	Type  string `json:"type"`
	Value string `json:"value"`
}
type Lit struct {
	Type  string `json:"type"`
	Value string `json:"value"`
}
type Bindings struct {
	Subj  Subj  `json:"subj"`
	Score Score `json:"score"`
	Name  Name  `json:"name"`
	Desc  Desc  `json:"desc"`
	Lit   Lit   `json:"lit"`
}
type Results struct {
	Bindings []Bindings `json:"bindings"`
}

// slack struct

type Autogenerated struct {
	Blocks []Blocks `json:"blocks"`
}
type Text struct {
	Type string `json:"type"`
	Text string `json:"text"`
}
type Blocks struct {
	Type string `json:"type"`
	Text Text   `json:"text,omitempty"`
}

func BuildReply(postBody []byte) string {
	res := SPARQLresp{}

	if err := json.Unmarshal(postBody, &res); err != nil {
		panic(err)
	}
	fmt.Println(res.Results)

	return "json for reply"
}
